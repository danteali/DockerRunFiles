#!/bin/bash

# We've used the macvlan 'trick' to give this container it's own IP on the network (hence '--ip=' 
# in command below) using '--network lan_net' to allow Alexa voice integration (via Emulated Hue). 
# For some reason it wouldn't work for me without this. But some users report this is not needed. 
# Some have had luck using the '--net=host' option to get it working.
# macvlan usage info: https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/
# Also see the script in the 'macvlan' folder which sets up the local communication between host and 
# containers.

# Get sensitive info from .conf file
CONF_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
typeset -A secrets    # Define array to hold variables 
while read line; do
  if echo $line | grep -F = &>/dev/null; then
    varname=$(echo "$line" | cut -d '=' -f 1); secrets[$varname]=$(echo "$line" | cut -d '=' -f 2-)
  fi
done < $CONF_DIR/node-red.conf
#echo ${secrets[FQDN]}; echo ${secrets[IP]}; echo ${secrets[USERNAME]}; echo ${secrets[PASSWORD]}

FQDN="${secrets[FQDN]}"
NAME="node-red"


docker stop $NAME
docker rm -f -v $NAME

#docker run -d \
docker create \
  --name=$NAME \
  --restart="unless-stopped" \
  -l org.label-schema.group="monitoring" \
  `# A dedicated IP means port mapping does not have any effect.` \
  `# All ports are accessible on dedicated IP and no ports on docker host` \
  `# are mapped.` \
  `# Traefik will still redirect FQDN to container through proxy network.` \
  `# However leaving commented out in case we need to re-enable since` \
  `# these should still work fine for access via docker host system if` \
  `# no LAN IP provided` \
    `#-p 1880:1880` \
  `#-e UID=1000 -e GID=1000` \
  --network lan_net \
  --ip=${secrets[IP]} \
  -v /storage/Docker/node-red/data:/data \
  -v /storage/scratchpad/nodered:/files \
  `#-v /etc/localtime:/etc/localtime` \
  -e TZ="Europe/London" \
  `#-l com.centurylinklabs.watchtower.enable='false'` \
  `# ------- Traefik Proxy Section -------` \
  -l "traefik.enable=true" \
  -l "traefik.port=1880" \
  -l "traefik.frontend.rule=Host:$NAME.$FQDN" \
  -l "traefik.frontend.auth.basic.users=${secrets[USERNAME]}:${secrets[PASSWORD]}" \
  `# -------------------------------------` \
  nodered/node-red
  #nodered/node-red-docker
  #nodered/node-red-docker:v8


# Add to traefik-proxy network so it can reach the other container
docker network connect bridge $NAME
docker network connect traefik-proxy $NAME

# Start container
docker start $NAME