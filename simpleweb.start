#!/bin/bash

# Simple website which shows the IP of visitor. Very useful for testing Traefik configuration etc

# Update GitHub with any changes to Docker scripts (timeout to default No after 10s).
read -r -n 10 -t 5 -p "`echo -e $'\e[0;35m'`Do you wish to update git repo for docker run scripts? [y/N] `echo -e $'\n\e[1;35m'`(Script will continue without updating repo if no response in 5s)`echo -e $'\e[0m'`" response
response=${response:-No}    # Default response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]; then
    /home/ryan/scripts/docker/_update_git.sh
fi
echo

# Get sensitive info from .conf file
CONF_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
typeset -A secrets    # Define array to hold variables 
while read line; do
  if echo $line | grep -F = &>/dev/null; then
    varname=$(echo "$line" | cut -d '=' -f 1); secrets[$varname]=$(echo "$line" | cut -d '=' -f 2-)
  fi
done < $CONF_DIR/simpleweb.conf
#echo ${secrets[FQDN]}; echo ${secrets[USERNAME]}; echo ${secrets[PASSWORD]}

FQDN="${secrets[FQDN]}"
NAME="simpleweb"

docker stop $NAME
docker rm -f -v $NAME

# Since we can't assign two networks with 'docker run' we need to create the container first,
# then add to traefik-proxy network and default bridge network before starting it.

#docker run -d \
docker create \
  --restart="unless-stopped" \
  --name=$NAME \
  `# Can still access via 192.168.0.10:81 by mapping port i.e. dont need to use proxied route` \
  -p 81:80 \
  `# ------- Traefik Proxy Section -------` \
  --network traefik-proxy \
  -l "traefik.enable=true" \
  -l "traefik.port=80" \
  `###### To access container on home.$FQDN/$NAME` \
  `#-l "traefik.frontend.rule=Host:home.$FQDN;PathPrefixStrip:/$NAME"` \
  `###### Or uncomment to access container on $NAME.$FQDN` \
  -l "traefik.frontend.rule=Host:$NAME.$FQDN" \
  `###### Username/password pulled from conf file with code at top of script  ` \
  -l "traefik.frontend.auth.basic.users=${secrets[USERNAME]}:${secrets[PASSWORD]}" \
  `###### Username/password defined in file in Traefik volume` \
  `#-l "traefik.frontend.auth.basic.usersFile=/etc/traefik/htpasswds/htpasswd_simpleweb"` \
  `# -------------------------------------` \
  yeasy/simple-web:latest

# Add to bridge & traefik-proxy network so it can reach the other container
docker network connect bridge $NAME
docker network connect traefik-proxy $NAME

# Start container
docker start $NAME


